<?php

namespace Proxies\__CG__\Basket\DatabaseBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Personne extends \Basket\DatabaseBundle\Entity\Personne implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'Basket\\DatabaseBundle\\Entity\\Personne' . "\0" . 'id', '' . "\0" . 'Basket\\DatabaseBundle\\Entity\\Personne' . "\0" . 'name', '' . "\0" . 'Basket\\DatabaseBundle\\Entity\\Personne' . "\0" . 'surname', '' . "\0" . 'Basket\\DatabaseBundle\\Entity\\Personne' . "\0" . 'gender', '' . "\0" . 'Basket\\DatabaseBundle\\Entity\\Personne' . "\0" . 'address', '' . "\0" . 'Basket\\DatabaseBundle\\Entity\\Personne' . "\0" . 'parentsAddress', '' . "\0" . 'Basket\\DatabaseBundle\\Entity\\Personne' . "\0" . 'email', '' . "\0" . 'Basket\\DatabaseBundle\\Entity\\Personne' . "\0" . 'parentsEmail', '' . "\0" . 'Basket\\DatabaseBundle\\Entity\\Personne' . "\0" . 'mobile', '' . "\0" . 'Basket\\DatabaseBundle\\Entity\\Personne' . "\0" . 'phone', '' . "\0" . 'Basket\\DatabaseBundle\\Entity\\Personne' . "\0" . 'license', '' . "\0" . 'Basket\\DatabaseBundle\\Entity\\Personne' . "\0" . 'misc', '' . "\0" . 'Basket\\DatabaseBundle\\Entity\\Personne' . "\0" . 'birthdate');
        }

        return array('__isInitialized__', '' . "\0" . 'Basket\\DatabaseBundle\\Entity\\Personne' . "\0" . 'id', '' . "\0" . 'Basket\\DatabaseBundle\\Entity\\Personne' . "\0" . 'name', '' . "\0" . 'Basket\\DatabaseBundle\\Entity\\Personne' . "\0" . 'surname', '' . "\0" . 'Basket\\DatabaseBundle\\Entity\\Personne' . "\0" . 'gender', '' . "\0" . 'Basket\\DatabaseBundle\\Entity\\Personne' . "\0" . 'address', '' . "\0" . 'Basket\\DatabaseBundle\\Entity\\Personne' . "\0" . 'parentsAddress', '' . "\0" . 'Basket\\DatabaseBundle\\Entity\\Personne' . "\0" . 'email', '' . "\0" . 'Basket\\DatabaseBundle\\Entity\\Personne' . "\0" . 'parentsEmail', '' . "\0" . 'Basket\\DatabaseBundle\\Entity\\Personne' . "\0" . 'mobile', '' . "\0" . 'Basket\\DatabaseBundle\\Entity\\Personne' . "\0" . 'phone', '' . "\0" . 'Basket\\DatabaseBundle\\Entity\\Personne' . "\0" . 'license', '' . "\0" . 'Basket\\DatabaseBundle\\Entity\\Personne' . "\0" . 'misc', '' . "\0" . 'Basket\\DatabaseBundle\\Entity\\Personne' . "\0" . 'birthdate');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Personne $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setName($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', array($name));

        return parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', array());

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setSurname($surname)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSurname', array($surname));

        return parent::setSurname($surname);
    }

    /**
     * {@inheritDoc}
     */
    public function getSurname()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSurname', array());

        return parent::getSurname();
    }

    /**
     * {@inheritDoc}
     */
    public function setGender($gender)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setGender', array($gender));

        return parent::setGender($gender);
    }

    /**
     * {@inheritDoc}
     */
    public function getGender()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getGender', array());

        return parent::getGender();
    }

    /**
     * {@inheritDoc}
     */
    public function setAddress($address)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAddress', array($address));

        return parent::setAddress($address);
    }

    /**
     * {@inheritDoc}
     */
    public function getAddress()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAddress', array());

        return parent::getAddress();
    }

    /**
     * {@inheritDoc}
     */
    public function setParentsAddress($parentsAddress)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setParentsAddress', array($parentsAddress));

        return parent::setParentsAddress($parentsAddress);
    }

    /**
     * {@inheritDoc}
     */
    public function getParentsAddress()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getParentsAddress', array());

        return parent::getParentsAddress();
    }

    /**
     * {@inheritDoc}
     */
    public function setEmail($email)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEmail', array($email));

        return parent::setEmail($email);
    }

    /**
     * {@inheritDoc}
     */
    public function getEmail()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEmail', array());

        return parent::getEmail();
    }

    /**
     * {@inheritDoc}
     */
    public function setParentsEmail($parentsEmail)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setParentsEmail', array($parentsEmail));

        return parent::setParentsEmail($parentsEmail);
    }

    /**
     * {@inheritDoc}
     */
    public function getParentsEmail()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getParentsEmail', array());

        return parent::getParentsEmail();
    }

    /**
     * {@inheritDoc}
     */
    public function setMobile($mobile)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMobile', array($mobile));

        return parent::setMobile($mobile);
    }

    /**
     * {@inheritDoc}
     */
    public function getMobile()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMobile', array());

        return parent::getMobile();
    }

    /**
     * {@inheritDoc}
     */
    public function setPhone($phone)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPhone', array($phone));

        return parent::setPhone($phone);
    }

    /**
     * {@inheritDoc}
     */
    public function getPhone()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPhone', array());

        return parent::getPhone();
    }

    /**
     * {@inheritDoc}
     */
    public function setLicense($license)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLicense', array($license));

        return parent::setLicense($license);
    }

    /**
     * {@inheritDoc}
     */
    public function getLicense()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLicense', array());

        return parent::getLicense();
    }

    /**
     * {@inheritDoc}
     */
    public function setMisc($misc)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMisc', array($misc));

        return parent::setMisc($misc);
    }

    /**
     * {@inheritDoc}
     */
    public function getMisc()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMisc', array());

        return parent::getMisc();
    }

    /**
     * {@inheritDoc}
     */
    public function setBirthdate($birthdate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBirthdate', array($birthdate));

        return parent::setBirthdate($birthdate);
    }

    /**
     * {@inheritDoc}
     */
    public function getBirthdate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBirthdate', array());

        return parent::getBirthdate();
    }

}
